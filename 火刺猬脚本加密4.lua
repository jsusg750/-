local e=[[VFdbWVQYd0pRV1Z0UVoYBRhUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdIWUtMXVpRVhZbV1UXSllPF35tfUAIXgt/GhEREBEyVFdbWVQYb1FWXFdPGAUYd0pRV1Z0UVoCdVlTXW9RVlxXTxBDdllVXRgFGBrerojfuZPdsILftJTQvKLepJQaFHBRXF1oSl1VUU1VGAUYXllUS10Ua1lOXXtXVl5RXxgFGF5ZVEtdFHFWTEpXbF1ATBgFGBrelJrQh7bchYffrJAaFHtXVl5RX35XVFxdShgFGBrelJrQh7bchYffrJAaRREyMlRXW1lUGGxZWhgFGG9RVlxXTwJ1WVNdbFlaEEMydllVXRgFGBrQvKLepJTdvZTdqbIaFHFbV1YYBRgaSlpAWUtLXUxRXAIXFw8PCwwIDgALCgkaFGhKXVVRTVV3VlRBGAUYXllUS10yRREyMmxZWgJ5XFxoWUpZX0pZSFAQGtyFpNC4vRoUGt+5k92wgt+0lBoRMmxZWgJ5XFx0WVpdVBAa3IWk0Li9aWnXhKILAQAKDwkOCQsNGhEybFlaAnlcXHRZWl1UEBppad+GnNeEogkICQAJCQoOCQkaETIyVFdbWVQYbFlaGAUYb1FWXFdPAnVZU11sWVoQQzJ2WVVdGAUYGtG4ot+skN2yp9C7hRoUcVtXVhgFGBpKWkBZS0tdTFFcAhcXDw8LDAgOAAsKCRoUaEpdVVFNVXdWVEEYBRheWVRLXTJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRgacG15GN29sd2FiRoUe1lUVFpZW1MYBRheTVZbTFFXVhARMlRXWVxLTEpRVl8QX1lVXQJwTExIf11MEBpQTExISwIXF0hZS0xdWlFWFltXVRdKWU8XWUpCantfT2saEREQETJdVlwyRREyMmxZWgJ5XFx6TUxMV1YQQzJ2WVVdGAUYGt29sd2FiWcKGhR8XV5ZTVRMGAUYXllUS10Ue1lUVFpZW1MYBRheTVZbTFFXVhARMlRXWVxLTEpRVl8QX1lVXQJwTExIf11MEBpQTExISwIXF0pZTxZfUUxQTVpNS11KW1dWTF1WTBZbV1UXdWJ9fXYKDAoMF39KWUhQUVtLF1VZUVYXf0pZSFBRW0sWQFVUGhEREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrQjr3Rk6DfrIPQjJAaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdIWUtMXVpRVhZbV1UXSllPF1Jwel5yYVVrGhEREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrer7PQhZQaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAfUExMSEsCFxdIWUtMXVpRVhZbV1UXSllPF0oBD1wPXGsIHxRMSk1dEREQETJdVlwyRREyMmxZWgJ5XFxsV19fVF0QQzJ2WVVdGAUYGt2cpNCfvhoUfF1eWU1UTBgFGF5ZVEtdFHtZVFRaWVtTGAUYXk1WW0xRV1YQbllUTV0RMlFeGG5ZVE1dGExQXVYyX1lVXRZ0UV9QTFFWXxZ5VVpRXVZMGAUYe1dUV0oLFlZdTxAJFAkUCREyXVRLXTJfWVVdFnRRX1BMUVZfFnlVWlFdVkwYBRh7V1RXSgsWVl1PEAgUCBQIETJdVlwyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrRm6bQhZ4aFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdIWUtMXVpRVhZbV1UXSllPF3VwfQlbWm9+GhEREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrfsJTdmqEaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdIWUtMXVpRVhZbV1UXSllPF0JgUwxqSQpKGhEREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrdspDchaQaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdIWUtMXVpRVhZbV1UXSllPF2JSDHZWc0sOGhEREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrfrI3QvKnRrJbfo6AaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdKWU8WX1FMUE1aTUtdSltXVkxdVkwWW1dVF1lcTkBCUU5QS1JSXFBAUEtRXFFeTktQF1VXWlNdQVpXWUpcF1VZUVYXVVlRVhZMQEwaFExKTV0RERARMl1WXDJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRga0IC335GC0Jm00I2IGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQH1BMTEhLAhcXSllPFl9RTFBNWk1LXUpbV1ZMXVZMFltXVRd/UFdLTGhUWUFdSgsNChdsXUtMDBdVWVFWF35UV1lMHxEREBEyXVZcMkURMjJUV1tZVBhIVFlBXUoYBRhvUVZcV08CdVlTXWxZWhBDMnZZVV0YBRga37aR3ZaOGhRxW1dWGAUYGkpaQFlLS11MUVwCFxcMDAALCwwNAQEAGhRoSl1VUU1Vd1ZUQRgFGF5ZVEtdMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrer5jRoajQj4saFHxdXllNVEwYBRheWVRLXRR7WVRUWllbUxgFGF5NVltMUVdWEG5ZVE1dETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdIWUtMXVpRVhZbV1UXSllPF24NaGlBC0EIGhRMSk1dEREQETJdVlwyRREyMkhUWUFdSgJ5XFxsXUBMWldAEEMydllVXRgFGBrfn4PdspDRuKfdgp4aFHxdXllNVEwYBRgaGhRsXUBMfFFLWUhIXVlKGAUYTEpNXRR7WVRUWllbUxgFGF5NVltMUVdWEG5ZVE1dETJfWVVdFmhUWUFdSksWdFdbWVRoVFlBXUoWe1BZSllbTF1KFnBNVVlWV1FcFm9ZVFNrSF1dXBgFGG5ZVE1dMl1WXDJFETIySFRZQV1KAnlcXGxdQExaV0AQQzJ2WVVdGAUYGtCPi9CPu9GToN2CnhoUfF1eWU1UTBgFGBoaFGxdQEx8UUtZSEhdWUoYBRhMSk1dFHtZVFRaWVtTGAUYXk1WW0xRV1YQbllUTV0RMl9ZVV0WaFRZQV1KSxZ0V1tZVGhUWUFdShZ7UFlKWVtMXUoWcE1VWVZXUVwWck1VSGhXT11KGAUYbllUTV0yXVZcMkURMjJsWVoCeVxcbF1ATFpXQBBDMnZZVV0YBRga0b+13bKj0JaG34WWGhR8XV5ZTVRMGAUYGhoUbF1ATHxRS1lISF1ZShgFGExKTV0Ue1lUVFpZW1MYBRheTVZbTFFXVhBuWVRNXREyX1lVXRZvV0pTS0hZW10Wf0pZTlFMQRgFGG5ZVE1dMl1WXDJFETIySFRZQV1KAnlcXHpNTExXVhBDMnZZVV0YBRga35GH3ZqhGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQGlBMTEhLAhcXSFlLTF1aUVYWW1dVF0pZTxdSTkF2DVBsABoRERARMl1WXDJFETIySFRZQV1KAnlcXHpNTExXVhBDMnZZVV0YBRga0Zum0Jm0GhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQGlBMTEhLAhcXSllPFl9RTFBNWk1LXUpbV1ZMXVZMFltXVRcJCQwNCQxRW00XVVlRVhdKXV5LF1BdWVxLF0tQWVRZVl8XflRBGhEREBEyXVZcMkURMjJUV1tZVBhsWVoYBRhvUVZcV08CdVlTXWxZWhBDMnZZVV0YBRga3Y+M3ra03Zyf3rCgGhRxW1dWGAUYGkpaQFlLS11MUVwCFxcPDwsMCA4ACwoJGhRoSl1VUU1Vd1ZUQRgFGF5ZVEtdMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBoJGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQEBpQTExISwIXF0pZTxZfUUxQTVpNS11KW1dWTF1WTBZbV1UXUVdWVEFNS11fUUxQTVpeV0pVW1VXXEsXCRV0UVZdFWtbSlFITEsXVVlRVhdrVFlIHQoIellMTFRdSxoREREQETJdVlwyRREyMmxZWgJ5XFx6TUxMV1YQQzJ2WVVdGAUYGt29kN2zs9+TmN6xs92drxoUe1lUVFpZW1MYBRheTVZbTFFXVhARMlRXWVxLTEpRVl8QX1lVXQJwTExIf11MEBpQTExISwIXF0pZTxZfUUxQTVpNS11KW1dWTF1WTBZbV1UXbFdKWWtbSlFITBdrW0pRSEwXVVlRVhdrVFlIellMTFRdSxoRERARMl1WXDJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRga36OW3bG13rCp0Jac0Je+3qS43YSC3Y+M3ra00Lyi3qSUGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQGlBMTEhLAhcXSllPFl9RTFBNWk1LXUpbV1ZMXVZMFltXVRd/TUEVTFBZTBVdQFFLTEsXcE1aFUxQWUwVXUBRS0xLF1VZUVYXa1tKUUhMGhEREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrQto/dt67erI7Rp4vepIIaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdKWU8WX1FMUE1aTUtdSltXVkxdVkwWW1dVF3xXVlJXS0AXeW9rF0pdXksXUF1ZXEsXVVlRVhdoSldMXVtMXVxnDQ8BCgoIDQAKDAgOCQ8MDRZMQEwaEREQETJdVlwyRREyMlRXW1lUGGxZWhgFGG9RVlxXTwJ1WVNdbFlaEEMydllVXRgFGBrem5bepq8BAd2cpBoUcVtXVhgFGBpKWkBZS0tdTFFcAhcXDw8LDAgOAAsKCRoUaEpdVVFNVXdWVEEYBRheWVRLXTJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRgacAxAGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQGlBMTEhLAhcXSllPFl9RTFBNWk1LXUpbV1ZMXVZMFltXVRdwDEBrW0pRSExLF3RXWVxdShdKXV5LF1BdWVxLF1VZUVYXVFdZXF1KFlRNWRoUTEpNXREREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrdvZDQv5LdspDRqoPfp4saFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdKWU8WX1FMUE1aTUtdSltXVkxdVkwWW1dVF3Z5bnl5cQgBABdsUE1WXF1KFXBNWhdVWVFWF3NZUUxNVhZUTVkaEREQETJdVlwyRREyMlRXW1lUGGxZWhgFGG9RVlxXTwJ1WVNdbFlaEEMydllVXRgFGBpKWVNdGhRxW1dWGAUYGkpaQFlLS11MUVwCFxcPDwsMCA4ACwoJGhRoSl1VUU1Vd1ZUQRgFGF5ZVEtdMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrepLjdhILdgYveiKnQvKLepJQaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdKWU8WX1FMUE1aTUtdSltXVkxdVkwWW1dVF29ZQV5dSggXaldaVFdAFWtbSlFITEsXSl1eSxdQXVlcSxdVWVFWF29ZQV5dSh0KCHBNWhoRERARMl1WXDJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRgaS1lIUV1WbgkaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdLWUhRXVYVTw8OWRZXVkpdVlxdShZbV1UXS0xZSkwaEREQETJdVlwyRREyMlRXW1lUGGxZWhgFGG9RVlxXTwJ1WVNdbFlaEEMydllVXRgFGBrQmpPRua/dhLsaFHFbV1YYBRgaSlpAWUtLXUxRXAIXFw8PCwwIDgALCgkaFGhKXVVRTVV3VlRBGAUYXllUS10yRREyMmxZWgJ5XFx6TUxMV1YQQzJ2WVVdGAUYGnBMTFlcVVFWGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwaUExMSEsCFxdKWU8WX1FMUE1aTUtdSltXVkxdVkwWW1dVF3dvd293b293bxdwbGwXVVlRVhdwbBZUTVkaERARMl1WXDJFETIyVFdbWVQYbFlaGAUYb1FWXFdPAnVZU11sWVoQQzJ2WVVdGAUYGltQWVFWGhRxW1dWGAUYGkpaQFlLS11MUVwCFxcPDwsMCA4ACwoJGhRoSl1VUU1Vd1ZUQRgFGF5ZVEtdMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBoJGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQH1BMTEhLAhcXSFlLTF1aUVYWW1dVF0pZTxcOYlxMAEEOQh8RERARMl1WXDJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRgaChoUe1lUVFpZW1MYBRheTVZbTFFXVhARMlRXWVxLTEpRVl8QX1lVXQJwTExIf11MEB9QTExISwIXF0hZS0xdWlFWFltXVRdKWU8XdH1rTVUMSkkfEREQETJdVlwyRREyMlRXW1lUGGxZWhgFGG9RVlxXTwJ1WVNdbFlaEEMydllVXRgFGBrelYPRq7nQhZAaFHFbV1YYBRgaSlpAWUtLXUxRXAIXFw8PCwwIDgALCgkaFGhKXVVRTVV3VlRBGAUYXllUS10yRREyMmxZWgJ5XFx6TUxMV1YQQzJ2WVVdGAUYGt+Cmt23jt2VqBoUe1lUVFpZW1MYBRheTVZbTFFXVhARMlRXWVxLTEpRVl8QX1lVXQJwTExIf11MEBpQTExISwIXF19dTFZZTFFOXRZbWxdLW0pRSEwXVFdZXF1KGhEREBEyXVZcMkURMjJUV1tZVBhsWVoYBRhvUVZcV08CdVlTXWxZWhBDMnZZVV0YBRga36Op37OJ3IKC36ynGhRxW1dWGAUYGkpaQFlLS11MUVwCFxcPDwsMCA4ACwoJGhRoSl1VUU1Vd1ZUQRgFGF5ZVEtdMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBoJGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQGlBMTEhLAhcXSFlLTF0WT11aS1FMXRdIFw0JCwEPWw4AFVoOXAgVDAkIXBVZXQFeFQoKXA1dWQ0PCwxcXhZMQEwaFExKTV0RERARMl1WXDJFETIyVFdbWVQYbFlaGAUYb1FWXFdPAnVZU11sWVoQQzJ2WVVdGAUYGlpeGhRxW1dWGAUYGkpaQFlLS11MUVwCFxcPDwsMCA4ACwoJGhRoSl1VUU1Vd1ZUQRgFGF5ZVEtdMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBoJGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQH1BMTEhLAhcXSllPFl9RTFBNWk1LXUpbV1ZMXVZMFltXVRdzUVZccVBZTl0Xe1BRWllwTXoXVVlRVhd7UFFaWRV6fhZMQEwfEREQETJdVlwyRREyMmxZWgJ5XFx6TUxMV1YQQzJ2WVVdGAUYGgoaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdKWU8WX1FMUE1aTUtdSltXVkxdVkwWW1dVF2BRWVdhTVZ7dhdgUVlXFWFNVhVtb20XVVlRVhcdfQ4deg0deg8dfQAdegwdensdfQ8dAH0dAHpaXhZUTVkaFExKTV0RERARMl1WXDJFETIyVFdbWVQYbFlaGAUYb1FWXFdPAnVZU11sWVoQQzJ2WVVdGAUYGt2yo9G/t9yEmN2dvxoUcVtXVhgFGBpKWkBZS0tdTFFcAhcXDw8LDAgOAAsKCRoUaEpdVVFNVXdWVEEYBRheWVRLXTJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRga3bKj0b+33ISY3Z2/CRoUe1lUVFpZW1MYBRheTVZbTFFXVhARMlRXWVxLTEpRVl8QX1lVXQJwTExIf11MEB9QTExISwIXF0pZTxZfUUxQTVpNS11KW1dWTF1WTBZbV1UXUkFWQlQXVVlRVhdVWVFWF3VNS1tUWUsdCgh0XV9dVldLFlRNWR8RERARMl1WXDJFETIyVFdbWVQYbFlaGAUYb1FWXFdPAnVZU11sWVoQQzJ2WVVdGAUYGtyEqN6kkNC8ot6klBoUcVtXVhgFGBpKWkBZS0tdTFFcAhcXDw8LDAgOAAsKCRoUaEpdVVFNVXdWVEEYBRheWVRLXTJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRga36GFGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQGlBMTEhLAhcXSllPFl9RTFBNWk1LXUpbV1ZMXVZMFltXVRdgUVlXYU1We3YXc1lOVxVtURdVWVFWFx19DB16ex0BCB19Dh0Bex15AB19DR15DB15Dx19DB16eR15AAoWVE1ZGhRMSk1dEREQETJdVlwyRREyMlRXW1lUGGxZWhgFGG9RVlxXTwJ1WVNdbFlaEEMydllVXRgFGBrQvKLepJTcgJXdh7saFHFbV1YYBRgaSlpAWUtLXUxRXAIXFw8PCwwIDgALCgkaFGhKXVVRTVV3VlRBGAUYXllUS10yRREyMmxZWgJ5XFx6TUxMV1YQQzJ2WVVdGAUYGt6ll9C8ot6klBoUe1lUVFpZW1MYBRheTVZbTFFXVhARMlRXWVxLTEpRVl8QX1lVXQJwTExIf11MEBpQTExISwIXF0pZTxZfUUxQTVpNS11KW1dWTF1WTBZbV1UXQk1XUFdWX1JRWVYXWlJaF1VZUVYXWlJaGhEREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrcgqkQ36GF37mIERoUe1lUVFpZW1MYBRheTVZbTFFXVhARMlRXWVxLTEpRVl8QX1lVXQJwTExIf11MEBpQTExISwIXF0pZTxZfUUxQTVpNS11KW1dWTF1WTBZbV1UXYFFZV2FNVnt2Fw4ODg4ODg4ODg4XVVlRVhcdfQwdenkdAQkdfQAdAAwdAXkdfQ4dAXsdeXsdfQ4deg0dAHodfQAdeX4dAQ0dfQ8dAAEdAAAdfQwdenkdAQkdfQAdAAwdAXkdfQ4dAXsdeXsdfQ4deg0dAHodfQAdeX4dAQ0dfQ8dAAEdAABgUVlXHQoIYU1WFlRNWRoRERARMl1WXDJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRga3piA0Lyi3qSUGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyX11MX11WThARFlBdBRrchaTQuL3RiYQaVFdZXEtMSlFWXxBfWVVdAnBdVEh/XUwQGlBMTEhLAhcXSFlLTF1aUVYWW1dVF0pZTxcKb1VcWUh8ChoRERARMl1WXDJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRga3bGp3ZaaTgsaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJSUVlWU11nbgsYBRga3IWk0Li9Z92wpd2ctxpSUVlWU10YBRga3bGp3ZaaaWnfhpwLDA8PCgwJDQ0aVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQEB9QTExISwIXF0pZTxZfUUxQTVpNS11KW1dWTF1WTBZbV1UXUlFZVlNdaW9pF1JRWVZTXW4LF1VZUVYXUlFZVlNdZ24LHxERERARMl1WXDJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRgaYHvXhLTdtZndl75ZGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyX11MX11WThARFmB7BRrchaTQuL1gexpUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdIWUtMXVpRVhZbV1UXSllPF2h5fkJhQAh+GhEREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrRoIfdiKzdlqHerpcaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaUExMSEsCFxdKWU8WX1FMUE1aTUtdSltXVkxdVkwWW1dVF3liYUt/UUxQTVoXW1BRVFRCFU9XSlNLUFdIF1VZUVYXeUpbXU1LHQoIYB0KCG4LGhEREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrdh7XQvKLepJQaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJfXUxfXVZOEBEWSl1WDg4OGAUYGt2HtdC8ot6klNeEtN2ymNCFhd6vjtGvjNGth9CXj9C4qN2HuxpUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBBNTF4AFltQWUoQEF5NVltMUVdWEBEYSl1MTUpWGExZWlRdFk1WSFlbUxBDCQgMFAkJDhQJCQ4UCQkKFAkJDRQNABQMDxQMDxQJCQoUAQ8UCQkNFAkJDhQJCAkUAQAUCQgNFAkJCBQMDhQBARQJCQkUCQgBFAwPFAkJDBQBDxQJCQEUDA8UAQgUDw8UCQkNFA4PFA0OFAkJDBQJCAwUCQkMRRFdVlwREBEREREQEQNdVlwyRREyMmxZWgJ5XFx6TUxMV1YQQzJ2WVVdGAUYGt+dpt29sdC8ot6klBoUe1lUVFpZW1MYBRheTVZbTFFXVhARMlRXWVxLTEpRVl8QX1lVXQJwTExIf11MEE1MXgAWW1BZShAQXk1WW0xRV1YQERhKXUxNSlYYTFlaVF0WTVZIWVtTEEMJCAwUCQkOFAkJDhQJCQoUCQkNFA0AFAwPFAwPFAkJChQBDxQJCQ0UCQkOFAkICRQBABQJCA0UCQkIFAwOFAEBFAkJCRQJCAEUDA8UCQkMFAEPFAkJARQMDxQNDhQJCAoUDQgUDw4UAQEUCQkLFAkJCxQACEURXVZcERAREREREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrRparQvKLepJQaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAfUExMSEsCFxdKXVZMSkEWW1cXW0wKAQsXSllPHxEREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrQvKLepJTcgJXdh7saFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEF9ZVV0CcExMSH9dTBAaZAkIDGQJCQ5kCQkOZAkJCmQJCQ1kDQBkDA9kDA9kCQkKZAEPZAkJDWQJCQ5kCQgJZAEAZAkIDWQJCQhkDA5kAQFkCQkJZAkIAWQMD2QJCQxkAQ9kCQkBZAwPZAkIC2QJCAlkCQgBZAkKCGQPCmQJCQFkDg1kDAEaEREQETJdVlwyRREyMmxZWgJ5XFx6TUxMV1YQQzJ2WVVdGAUYGtGAlVBNWhoUe1lUVFpZW1MYBRheTVZbTFFXVhARMlRXWVxLTEpRVl8QX1lVXQJwTExIf11MEE1MXgAWW1BZShAQXk1WW0xRV1YQERhKXUxNSlYYTFlaVF0WTVZIWVtTEEMJCAwUCQkOFAkJDhQJCQoUCQkNFA0AFAwPFAwPFAkJChQBDxQJCQ0UCQkOFAkICRQBABQJCA0UCQkIFAwOFAEBFAkJCRQJCAEUDA8UCQkMFAEPFAkJARQMDxQACRQAARQMARQJCQsUCQkKFAEBFAkJDRQJCA5FEV1WXBEQERERERARMl1WXDJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRga0aWq0KOhGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyMl9dTF9dVk4QERZdV1UYBRga0aWq0KOhGjJUV1lcS0xKUVZfEBpkCQgAZAkJCWQBD2QJCAhkCQkNZAkJDmQJCQxkCQgNZAkJCGQJCAtkDAhkCQgLZAEPZAkIAWQJCAlkDQBkDwpkCQkOZAkJDmQJCQpkDwlkCQgJZAkJDmQMCGQLAWQJCAxkCQkOZAkJDmQJCQpkCQkNZA0AZAwPZAwPZAkJCmQBD2QJCQ1kCQkOZAkICWQBAGQJCA1kCQkIZAwOZAEBZAkJCWQJCAFkDA9kCQkMZAEPZAkJAWQMD2QOAGQJCgpkCQoIZAkJDWQACWQACmQOAGQADWQLAWQMCWQMCWQMCGQMCRoREBEyXVZcMkURMjJsWVoCeVxcek1MTFdWEEMydllVXRgFGBrdpIjdipEaFHtZVFRaWVtTGAUYXk1WW0xRV1YQETJUV1lcS0xKUVZfEBpkCQgAZAkJCWQBD2QJCAhkCQkNZAkJDmQJCQxkCQgNZAkJCGQJCAtkDAhkCQgLZAEPZAkIAWQJCAlkDQBkDwpkCQkOZAkJDmQJCQpkDwlkCQgJZAkJDmQMCGQLDGQJCAxkCQkOZAkJDmQJCQpkCQkNZA0AZAwPZAwPZAkJDGQBD2QJCQFkDA5kCQgLZAkIDWQJCQ5kCQgMZAkJD2QBAGQJCQ9kCQkNZAkICWQJCQxkAQFkCQkJZAkJCGQJCQ5kCQgJZAkJCGQJCQ5kDA5kAQFkCQkJZAkIAWQMD2QBAGQBAGQBD2QJCAFkCQoIZAEAZAEAZAEPZAkIAWQJCghkAQBkAQBkAQ9kCQgBZAkKCGQMD2QBAWQJCQlkCQgIZAkICWQJCQ1kCQkKZAEPZAEBZAkICWQJCQ1kDA1kAQBkCQgAZAEPZAkJCGQJCA9kDA9kCQgBZAEPZAkIDWQJCQhkDA9kCw9kDgFkDQ1kCw9kDQ9kDQ9kCw9kDg5kDgBkCwxkDAlkDAlkDAhkDAkaERARMl1WXDJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRga3b6IGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQGlBMTEhLAhcXSFlLTF1aUVYWW1dVF0pZTxd/agx7UG9zThoRERARMl1WXDJFETIybFlaAnlcXHpNTExXVhBDMnZZVV0YBRgaWUxXGhR7WVRUWllbUxgFGF5NVltMUVdWEBEyVFdZXEtMSlFWXxBfWVVdAnBMTEh/XUwQGlBMTEhLAhcXSllPFl9RTFBNWk1LXUpbV1ZMXVZMFltXVRdZTFdBWUFZQVkXUlFZV1pdVhdVWVFWF1JRWVVRVFFLTBoRERARMl1WXDJFEQ==]] local k='88888888' local d={} local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' for i=1,#e,4 do local c1,c2,c3,c4=string.byte(e,i,i+3) c1=b:find(string.char(c1))-1 c2=b:find(string.char(c2))-1 c3=b:find(string.char(c3))-1 c4=b:find(string.char(c4))-1 local n=bit32.lshift(c1,18)+bit32.lshift(c2,12)+bit32.lshift(c3,6)+c4 table.insert(d,string.char(bit32.rshift(bit32.band(n,0xFF0000),16))) if c3~=64 then table.insert(d,string.char(bit32.rshift(bit32.band(n,0xFF00),8))) end if c4~=64 then table.insert(d,string.char(bit32.band(n,0xFF))) end end d=table.concat(d) local r={} for i=1,#d do r[i]=string.char(string.byte(d,i)^string.byte(k,((i-1)%#k)+1)) end local f=loadstring(table.concat(r)) if f then return f() else error("解密失败") end