--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v87=0;while true do if (v87==0) then v19=v0(v3(v30,1,1));return "";end end else local v88=0;local v89;while true do if (v88==0) then v89=v2(v0(v30,16));if v19 then local v125=v5(v89,v19);v19=nil;return v125;else return v89;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v90=0 -0 ;local v91;while true do if (v90==((0 + 0) -0)) then v91=(v31/((3 -1)^(v32-(2 -1))))%((621 -((1432 -(282 + 595)) + 64))^(((v33-1) -(v32-((2569 -(1523 + 114)) -(857 + 74)))) + 1)) ;return v91-(v91%1) ;end end else local v92=((513 + 57) -(367 + 201))^(v32-(928 -(214 + (1015 -302)))) ;return (((v31%(v92 + v92))>=v92) and 1) or (0 + 0) ;end end local function v21() local v34=1065 -(68 + 997) ;local v35;while true do if (((282 + 989) -(226 + (2001 -(892 + 65))))==v34) then return v35;end if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + (118 -(32 + 85)) ;v34=1 + 0 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (4 -2) );v18=v18 + (3 -1) ;return (v37 * 256) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (4 -1) );v18=v18 + (354 -(87 + 263)) ;return (v41 * (16777396 -(50 + 17 + 113))) + (v40 * ((190997 -142941) + 17480)) + (v39 * ((1580 -(802 + 150)) -372)) + v38 ;end local function v24() local v42=0;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(0 -0)) then v43=v23();v44=v23();v42=1;end if (v42==(5 -2)) then if (v47==(0 + 0)) then if (v46==((1769 -(201 + 571)) -(915 + 82))) then return v48 * 0 ;else v47=2 -1 ;v45=0 + 0 ;end elseif (v47==(2691 -644)) then return ((v46==(1187 -((2207 -(116 + 1022)) + 118))) and (v48 * ((2 -1)/((0 -0) -(0 + 0))))) or (v48 * NaN) ;end return v8(v48,v47-(178 + (3084 -2239)) ) * (v45 + (v46/(2^(92 -40)))) ;end if (v42==(1 + (0 -0))) then v45=792 -(368 + 423) ;v46=(v20(v44,3 -2 ,38 -(10 + 8) ) * ((7 -5)^(474 -(416 + 26)))) + v43 ;v42=6 -(863 -(814 + 45)) ;end if ((1 + 1)==v42) then v47=v20(v44,36 -15 ,469 -(145 + 293) );v48=((v20(v44,462 -(44 + 386) )==(1487 -(998 + 488))) and  -1) or ((2 -1) + 0) ;v42=3 + 0 ;end end end local function v25(v49) local v50;if  not v49 then local v93=0 + 0 ;while true do if (v93==((0 -0) + 0)) then v49=v23();if (v49==(1080 -(1020 + 60))) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1424 -((2982 -2352) + 793)) );v18=v18 + v49 ;local v51={};for v67=886 -(261 + 624) , #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v94,v95,v96,v97,v98,v99,v100,v101) local v94=(function() return 0 -0 ;end)();local v95=(function() return;end)();local v96=(function() return;end)();while true do if (v94== #",") then if (v95== #"\\") then v96=(function() return v97()~=(0 -0) ;end)();elseif (v95==2) then v96=(function() return v98();end)();elseif (v95== #"19(") then v96=(function() return v99();end)();end v100[v101]=(function() return v96;end)();break;end if (v94~=0) then else local v120=(function() return 867 -(550 + 317) ;end)();local v121=(function() return;end)();while true do if (v120~=(0 -0)) then else v121=(function() return 0;end)();while true do if (v121~=(0 -0)) then else v95=(function() return v97();end)();v96=(function() return nil;end)();v121=(function() return 2 -1 ;end)();end if (v121~=(286 -(134 + 151))) then else v94=(function() return  #"]";end)();break;end end break;end end end end return v94,v95,v96,v97,v98,v99,v100,v101;end;end)();local v53=(function() return function(v102,v103,v104) local v105=(function() return 0;end)();local v106=(function() return;end)();while true do if (v105==0) then v106=(function() return 1665 -(970 + 695) ;end)();while true do if (v106~=(0 -0)) then else local v126=(function() return 1990 -(582 + 1408) ;end)();local v127=(function() return;end)();while true do if (v126==(0 -0)) then v127=(function() return 0;end)();while true do if (v127==0) then local v134=(function() return 0 -0 ;end)();while true do if (v134==0) then v102[v103-#"," ]=(function() return v104();end)();return v102,v103,v104;end end end end break;end end end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #",",v58 do FlatIdent_2BD95,Type,Cons,v21,v24,v25,v59,v69=(function() return v52(FlatIdent_2BD95,Type,Cons,v21,v24,v25,v59,v69);end)();end v57[ #"gha"]=(function() return v21();end)();for v70= #"|",v23() do local v71=(function() return v21();end)();if (v20(v71, #"|", #":")~=(0 -0)) then else local v110=(function() return 1824 -(1195 + 629) ;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if (v110~=(2 -0)) then else while true do if (v111== #" ") then local v128=(function() return 0;end)();local v129=(function() return;end)();while true do if (v128==(241 -(187 + 54))) then v129=(function() return 0;end)();while true do if (v129==(781 -(162 + 618))) then v111=(function() return 2;end)();break;end if (v129==(0 + 0)) then v114=(function() return {v22(),v22(),nil,nil};end)();if (v112==0) then local v278=(function() return 0 -0 ;end)();while true do if (v278~=0) then else v114[ #"-19"]=(function() return v22();end)();v114[ #"asd1"]=(function() return v22();end)();break;end end elseif (v112== #"<") then v114[ #"xxx"]=(function() return v23();end)();elseif (v112==2) then v114[ #"91("]=(function() return v23() -(2^(26 -10)) ;end)();elseif (v112== #"-19") then local v408=(function() return 0;end)();while true do if ((0 + 0)~=v408) then else v114[ #"nil"]=(function() return v23() -(2^(1652 -(1373 + 263))) ;end)();v114[ #"asd1"]=(function() return v22();end)();break;end end end v129=(function() return 1;end)();end end break;end end end if (v111~= #"xnx") then else if (v20(v113, #"-19", #"xxx")== #"!") then v114[ #"http"]=(function() return v59[v114[ #"xnxx"]];end)();end v54[v70]=(function() return v114;end)();break;end if (v111~=(1002 -(451 + 549))) then else local v131=(function() return 0 + 0 ;end)();while true do if (v131~=(0 -0)) then else if (v20(v113, #":", #"]")~= #"[") then else v114[2 -0 ]=(function() return v59[v114[1386 -(746 + 638) ]];end)();end if (v20(v113,2,1 + 1 )~= #"{") then else v114[ #"19("]=(function() return v59[v114[ #"xxx"]];end)();end v131=(function() return 1 -0 ;end)();end if (v131~=(342 -(218 + 123))) then else v111=(function() return  #"nil";end)();break;end end end if (v111==(1581 -(1535 + 46))) then local v132=(function() return 0 + 0 ;end)();while true do if ((0 + 0)~=v132) then else v112=(function() return v20(v71,2, #"-19");end)();v113=(function() return v20(v71, #"xnxx",6);end)();v132=(function() return 1;end)();end if (1~=v132) then else v111=(function() return  #"~";end)();break;end end end end break;end if ((561 -(306 + 254))==v110) then local v122=(function() return 0 + 0 ;end)();while true do if (v122==1) then v110=(function() return 2;end)();break;end if (0~=v122) then else v113=(function() return nil;end)();v114=(function() return nil;end)();v122=(function() return 1;end)();end end end if (0==v110) then local v123=(function() return 0;end)();local v124=(function() return;end)();while true do if (v123==(0 -0)) then v124=(function() return 1467 -(899 + 568) ;end)();while true do if (v124==(0 + 0)) then v111=(function() return 0;end)();v112=(function() return nil;end)();v124=(function() return 2 -1 ;end)();end if (v124==1) then v110=(function() return 604 -(268 + 335) ;end)();break;end end break;end end end end end end for v72= #" ",v23() do v55,v72,v28=(function() return v53(v55,v72,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[291 -(60 + 230) ];local v65=v61[574 -(426 + 146) ];local v66=v61[3];return function(...) local v73=v64;local v74=v65;local v75=v66;local v76=v27;local v77=1;local v78= -1;local v79={};local v80={...};local v81=v12("#",...) -(1457 -(282 + 1174)) ;local v82={};local v83={};for v107=811 -(569 + 242) ,v81 do if ((2541>=1876) and (v107>=v75)) then v79[v107-v75 ]=v80[v107 + 1 ];else v83[v107]=v80[v107 + (2 -1) ];end end local v84=(v81-v75) + 1 + 0 ;local v85;local v86;while true do v85=v73[v77];v86=v85[1];if (v86<=(1057 -(706 + 318))) then if ((1782<=3772) and (v86<=(1267 -(721 + 530)))) then if ((v86<=7) or (4700<813)) then if (v86<=(1274 -(945 + 326))) then if (v86<=((2 -0) -1)) then if ((3199<4050) and (v86==0)) then local v137=0 + 0 ;local v138;local v139;while true do if (v137==(701 -((342 -71) + 429))) then for v335=v138 + 1 + 0 ,v85[4] do v139=v139   .. v83[v335] ;end v83[v85[1502 -(1408 + 92) ]]=v139;break;end if ((v137==(1086 -(69 + 392 + 625))) or (4951<4430)) then v138=v85[1291 -(993 + 295) ];v139=v83[v138];v137=1;end end else v83[v85[1 + 1 + 0 ]]=v83[v85[1174 -(69 + 349 + 753) ]][v85[4]];end elseif ((96==96) and (v86==(1 + 0 + 1))) then do return;end else v83[v85[2]]=v62[v85[8 -5 ]];end elseif (v86<=(1 + 4)) then if (v86==(2 + 2)) then local v144=0 + 0 ;local v145;while true do if ((v144==(529 -(406 + 123))) or (2739>4008)) then v145=v85[2];v83[v145]=v83[v145](v13(v83,v145 + (1770 -(1749 + 20)) ,v78));break;end end else local v146=(0 -0) + 0 ;local v147;local v148;while true do if (v146==1) then v83[v147 + (1323 -(447 + 802 + 73)) ]=v148;v83[v147]=v148[v85[1 + 1 + 2 ]];break;end if ((v146==(1145 -(466 + 679))) or (23==1134)) then v147=v85[4 -2 ];v148=v83[v85[8 -5 ]];v146=1901 -(106 + 1794) ;end end end elseif (v86>(2 + 4)) then v83[v85[1 + 1 ]][v85[8 -(5 + 0) ]]=v83[v85[10 -(5 + 1) ]];else v83[v85[116 -(4 + 52 + 58) ]]=v83[v85[587 -(57 + 527) ]];end elseif ((v86<=(1438 -(41 + 1386))) or (2693>=4111)) then if (v86<=(112 -(17 + 86))) then if (v86==(6 + 2)) then v83[v85[3 -(1434 -(797 + 636)) ]]=v85[3];elseif ((v83[v85[(24 -19) -3 ]]==v85[(1789 -(1427 + 192)) -(43 + 79 + 44) ]) or (4316<=2146)) then v77=v77 + (1 -0) ;else v77=v85[9 -6 ];end elseif (v86==(9 + (2 -1))) then v83[v85[1 + 1 ]]={};elseif (v85[3 -1 ]==v83[v85[69 -(30 + 35) ]]) then v77=v77 + 1 ;else v77=v85[3];end elseif (v86<=(9 + 4)) then if (v86==(1269 -(1043 + 193 + 21))) then local v156=0;local v157;while true do if (v156==((0 + 0) -0)) then v157=v85[(1540 -(192 + 134)) -(323 + 889) ];v83[v157]=v83[v157](v13(v83,v157 + (2 -1) ,v85[583 -(361 + 219) ]));break;end end else local v158=v85[322 -(53 + 267) ];v83[v158](v83[v158 + 1 + 0 ]);end elseif (v86<=(427 -((1291 -(316 + 960)) + 222 + 176))) then for v248=v85[984 -(18 + 964) ],v85[11 -8 ] do v83[v248]=nil;end elseif (v86>(9 + 6)) then if  not v83[v85[2 + 0 + 0 ]] then v77=v77 + 1 ;else v77=v85[853 -(20 + 830) ];end else v83[v85[2 + 0 + 0 ]][v85[129 -(116 + 10) ]]=v85[1 + 3 ];end elseif (v86<=(762 -((2071 -1529) + (747 -(83 + 468))))) then if (v86<=20) then if (v86<=(38 -20)) then if ((v86>(5 + 12)) or (3546<=2809)) then v77=v85[2 + 1 ];else local v160=0 + 0 ;local v161;local v162;while true do if (v160==(0 -0)) then v161=v85[4 -2 ];v162={};v160=1;end if (v160==(1807 -(1202 + 604))) then for v337=1, #v82 do local v338=1551 -(1126 + 425) ;local v339;while true do if (v338==(405 -(118 + 287))) then v339=v82[v337];for v397=0 -0 , #v339 do local v398=v339[v397];local v399=v398[1122 -(118 + 1003) ];local v400=v398[5 -3 ];if ((v399==v83) and (v400>=v161)) then local v411=377 -(142 + 235) ;while true do if (v411==0) then v162[v400]=v399[v400];v398[(18 -14) -(4 -1) ]=v162;break;end end end end break;end end end break;end end end elseif ((4904>2166) and (v86==(5 + 14))) then local v163=0;local v164;local v165;local v166;local v167;while true do if ((109>=90) and (v163==(979 -(553 + (1173 -749))))) then for v340=v164,v78 do local v341=0 -0 ;while true do if (v341==(0 + 0)) then v167=v167 + 1 + 0 ;v83[v340]=v165[v167];break;end end end break;end if ((4978>2905) and (v163==(0 + 0))) then v164=v85[1 + 1 ];v165,v166=v76(v83[v164](v13(v83,v164 + 1 ,v85[328 -(45 + 280) ])));v163=1 + 0 + 0 ;end if ((v163==1) or (3026<=2280)) then v78=(v166 + v164) -(2 -1) ;v167=0 -0 ;v163=4 -2 ;end end else v83[v85[1 + 1 ]]=v62[v85[(13 + 1) -(5 + 6) ]];end elseif (v86<=(775 -(239 + 514))) then if (v86==(8 + 13)) then v83[v85[1331 -(797 + 532) ]]=v83[v85[3 + 0 ]][v83[v85[2 + 2 ]]];else local v172=0 -0 ;local v173;local v174;local v175;while true do if (v172==(1202 -(373 + 829))) then v173=v74[v85[734 -(264 + 212 + 255) ]];v174=nil;v172=1131 -(369 + 761) ;end if ((v172==2) or (1653<=1108)) then for v342=1 + 0 ,v85[6 -2 ] do local v343=0;local v344;while true do if (v343==0) then v77=v77 + (1 -0) ;v344=v73[v77];v343=1 + 0 ;end if (v343==(239 -((117 -53) + 174))) then if (v344[1]==(1 + 5)) then v175[v342-1 ]={v83,v344[219 -(42 + 174) ]};else v175[v342-(1 + 0) ]={v62,v344[2 + 1 ]};end v82[ #v82 + ((3277 -(1733 + 39)) -(363 + 1141)) ]=v175;break;end end end v83[v85[1582 -(1183 + 397) ]]=v29(v173,v174,v63);break;end if (v172==(2 -1)) then v175={};v174=v10({},{__index=function(v345,v346) local v347=0 + 0 ;local v348;while true do if ((2909>2609) and (v347==(0 + 0))) then v348=v175[v346];return v348[1][v348[1977 -(1913 + 62) ]];end end end,__newindex=function(v349,v350,v351) local v352=0 + 0 ;local v353;while true do if (v352==(0 -0)) then v353=v175[v350];v353[1934 -(565 + 1368) ][v353[2]]=v351;break;end end end});v172=2;end end end elseif (v86>(86 -63)) then v63[v85[1664 -(1477 + 184) ]]=v83[v85[1950 -(1096 + 852) ]];else v83[v85[2 -0 ]]();end elseif (v86<=(13 + 14 + 1)) then if (v86<=(882 -(564 + 292))) then if ((757>194) and (v86==(42 -17))) then v83[v85[5 -3 ]]=v63[v85[307 -(244 + 60) ]];elseif ((v85[(2 -0) + 0 ]==v83[v85[4]]) or (31>=1398)) then v77=v77 + (477 -(41 + 435)) ;else v77=v85[1004 -(938 + 62 + 1) ];end elseif ((3196<=4872) and (v86==(21 + 6))) then v83[v85[2]]=v63[v85[(1640 -(409 + 103)) -(936 + 189) ]];else v83[v85[1 + 1 ]]();end elseif ((3326==3326) and (v86<=30)) then if ((1433<=3878) and (v86==(1642 -(1565 + 48)))) then v83[v85[2 + 0 ]]=v29(v74[v85[(1377 -(46 + 190)) -(782 + 356) ]],nil,v63);else local v183=267 -(176 + 91) ;local v184;while true do if (v183==0) then v184=v85[4 -2 ];v83[v184]=v83[v184](v83[v184 + (1 -(95 -(51 + 44))) ]);break;end end end elseif (v86<=31) then local v185=v85[(309 + 785) -(975 + 117) ];v83[v185]=v83[v185](v13(v83,v185 + (1876 -(157 + 1718)) ,v85[3 + 0 ]));elseif (v86==(113 -81)) then local v261=0 -(1317 -(1114 + 203)) ;local v262;while true do if (v261==(1018 -(697 + 321))) then v262=v85[5 -3 ];v83[v262](v13(v83,v262 + 1 ,v85[(731 -(228 + 498)) -2 ]));break;end end else local v263=v85[2];local v264=v83[v263];for v297=v263 + (2 -(1 + 0)) ,v85[2 + 1 ] do v7(v264,v83[v297]);end end elseif ((v86<=(93 -43)) or (1583==1735)) then if (v86<=(109 -68)) then if (v86<=(1264 -(322 + 905))) then if (v86<=35) then if (v86>(645 -(602 + 9))) then v62[v85[1192 -(449 + 740) ]]=v83[v85[874 -(826 + 46) ]];else local v189=v85[949 -(245 + 388 + 314) ];local v190=v83[v189];local v191=v83[v189 + (6 -4) ];if ((v191>((663 -(174 + 489)) + 0)) or (2981==2350)) then if (v190>v83[v189 + 1 ]) then v77=v85[1901 -(260 + 1638) ];else v83[v189 + (443 -(382 + 58)) ]=v190;end elseif (v190<v83[v189 + (3 -2) ]) then v77=v85[(7 -4) + 0 ];else v83[v189 + (1908 -(830 + 1075)) ]=v190;end end elseif (v86==(73 -37)) then local v192=0;local v193;local v194;while true do if ((0 -(524 -(303 + 221)))==v192) then v193=v85[2];v194=v83[v85[1208 -(902 + 303) ]];v192=1 -(1269 -(231 + 1038)) ;end if (v192==(2 -1)) then v83[v193 + 1 + 0 ]=v194;v83[v193]=v194[v85[1694 -(1121 + 475 + 94) ]];break;end end else local v195=v85[216 -(22 + (1354 -(171 + 991))) ];local v196,v197=v76(v83[v195](v13(v83,v195 + 1 ,v85[686 -(483 + (824 -624)) ])));v78=(v197 + v195) -(1464 -(1404 + 59)) ;local v198=0;for v250=v195,v78 do v198=v198 + 1 ;v83[v250]=v196[v198];end end elseif ((v86<=(106 -67)) or (4466<=493)) then if (v86==((134 -84) -12)) then v83[v85[767 -(468 + 297) ]]=v29(v74[v85[565 -(334 + 228) ]],nil,v63);else v83[v85[6 -4 ]][v85[6 -3 ]]=v83[v85[4]];end elseif (v86==(72 -32)) then for v253=v85[(2 -1) + 1 ],v85[3] do v83[v253]=nil;end else local v202=v85[238 -(141 + 95) ];v83[v202](v13(v83,v202 + 1 + 0 ,v85[7 -4 ]));end elseif (v86<=(108 -63)) then if ((v86<=43) or (2547<=1987)) then if ((2961>2740) and (v86>(10 + 26 + 6))) then if v83[v85[5 -3 ]] then v77=v77 + 1 + 0 ;else v77=v85[2 + 1 ];end else local v203=0 -0 ;local v204;local v205;local v206;while true do if ((3696>=3612) and (v203==(0 + 0))) then v204=v85[6 -4 ];v205=v83[v204 + (165 -(92 + 71)) ];v203=1;end if (1==v203) then v206=v83[v204] + v205 ;v83[v204]=v206;v203=1 + 1 ;end if (v203==(2 -0)) then if ((v205>(765 -(574 + 191))) or (2970==1878)) then if ((v206<=v83[v204 + 1 + 0 ]) or (3693<1977)) then v77=v85[3];v83[v204 + 3 ]=v206;end elseif (v206>=v83[v204 + (2 -1) ]) then v77=v85[2 + (2 -1) ];v83[v204 + 3 ]=v206;end break;end end end elseif (v86>(70 -26)) then do return;end elseif v83[v85[2]] then v77=v77 + (850 -(254 + 595)) ;else v77=v85[(398 -269) -(55 + 71) ];end elseif (v86<=(61 -(1262 -(111 + 1137)))) then if (v86>(1836 -(573 + 1217))) then local v207=0;local v208;while true do if (v207==0) then v208=v85[5 -(161 -(91 + 67)) ];v83[v208]=v83[v208]();break;end end else local v209=v85[1 + 2 ];local v210=v83[v209];for v255=v209 + (1 -0) ,v85[4] do v210=v210   .. v83[v255] ;end v83[v85[941 -(714 + 225) ]]=v210;end elseif (v86<=(140 -92)) then v83[v85[2]]=v83[v85[3 -0 ]][v83[v85[4]]];elseif ((v86==49) or (930>2101)) then local v267=v74[v85[3]];local v268;local v269={};v268=v10({},{__index=function(v308,v309) local v310=v269[v309];return v310[1][v310[1 + 1 ]];end,__newindex=function(v311,v312,v313) local v314=v269[v312];v314[1 -0 ][v314[808 -(118 + 688) ]]=v313;end});for v316=49 -(25 + 23) ,v85[1 + 3 ] do local v317=1886 -(927 + (2854 -1895)) ;local v318;while true do if ((4153>3086) and (v317==(3 -2))) then if (v318[1]==6) then v269[v316-(733 -(16 + 716)) ]={v83,v318[100 -(11 + 86) ]};else v269[v316-1 ]={v62,v318[6 -3 ]};end v82[ #v82 + 1 ]=v269;break;end if ((v317==(0 -0)) or (4654<=4050)) then v77=v77 + (1797 -(503 + 1293)) ;v318=v73[v77];v317=2 -1 ;end end end v83[v85[2 + 0 ]]=v29(v267,v268,v63);else local v271=v85[1063 -(810 + 251) ];v83[v271](v83[v271 + 1 + 0 ]);end elseif (v86<=58) then if (v86<=(17 + 37)) then if (v86<=(47 + 5)) then if (v86>(574 -(423 + 100))) then local v214=533 -(43 + 490) ;local v215;while true do if (v214==(733 -(711 + 22))) then v215=v85[7 -5 ];v83[v215]=v83[v215]();break;end end else local v216=859 -(240 + 619) ;local v217;while true do if (v216==(0 + 0)) then v217=v85[2 -0 ];v83[v217]=v83[v217](v13(v83,v217 + 1 + 0 ,v78));break;end end end elseif (v86>(1 + 52)) then v77=v85[3];else local v219=1744 -(1344 + 400) ;local v220;local v221;local v222;while true do if (v219==(405 -(255 + (415 -265)))) then v220=v85[2 + 0 ];v221=v83[v220];v219=1 + 0 ;end if (v219==(4 -3)) then v222=v85[9 -6 ];for v358=1740 -(404 + 1335) ,v222 do v221[v358]=v83[v220 + v358 ];end break;end end end elseif (v86<=(30 + 26)) then if (v86>(461 -(183 + 223))) then local v223=0 -0 ;local v224;local v225;local v226;while true do if (v223==(1 + 0)) then v226=v85[3];for v361=1,v226 do v225[v361]=v83[v224 + v361 ];end break;end if ((v223==((771 -(326 + 445)) + 0)) or (2602<1496)) then v224=v85[339 -(10 + 327) ];v225=v83[v224];v223=1 + 0 ;end end elseif  not v83[v85[340 -(118 + 220) ]] then v77=v77 + 1 ;else v77=v85[13 -10 ];end elseif (v86>(19 + 38)) then v63[v85[3]]=v83[v85[451 -(108 + 341) ]];else v83[v85[1 + 1 ]][v85[12 -9 ]]=v85[1497 -(711 + 782) ];end elseif (v86<=62) then if (v86<=((255 -140) -55)) then if (v86>59) then local v231=469 -(270 + (464 -265)) ;local v232;local v233;while true do if (v231==(1 + 0)) then for v364=1820 -(580 + 1239) , #v82 do local v365=0;local v366;while true do if ((0 -(711 -(530 + 181)))==v365) then v366=v82[v364];for v403=881 -(614 + 267) , #v366 do local v404=0 + 0 ;local v405;local v406;local v407;while true do if ((v404==(0 + 0)) or (1020>2288)) then v405=v366[v403];v406=v405[1 + 0 ];v404=2 -1 ;end if (v404==(1 + 0)) then v407=v405[1169 -(645 + 522) ];if ((328==328) and (v406==v83) and (v407>=v232)) then local v420=1790 -(1010 + 780) ;while true do if ((1511<3808) and (v420==(0 + 0))) then v233[v407]=v406[v407];v405[4 -3 ]=v233;break;end end end break;end end end break;end end end break;end if (v231==(0 -0)) then v232=v85[1838 -(1045 + (823 -(19 + 13))) ];v233={};v231=2 -1 ;end end else v83[v85[(2 -0) -0 ]]=v85[3];end elseif ((v86>(566 -(351 + 154))) or (2510>4919)) then local v236=v85[1576 -(1281 + 293) ];local v237=v83[v236 + ((624 -356) -(28 + (679 -441))) ];local v238=v83[v236] + v237 ;v83[v236]=v238;if (v237>(0 -0)) then if ((4763==4763) and (v238<=v83[v236 + (1560 -(359 + 1022 + (312 -134))) ])) then local v367=0 + 0 ;while true do if (v367==(0 + 0)) then v77=v85[2 + 1 ];v83[v236 + (10 -(13 -6)) ]=v238;break;end end end elseif (v238>=v83[v236 + 1 + (1812 -(1293 + 519)) ]) then local v368=470 -(381 + 89) ;while true do if (v368==(0 + 0)) then v77=v85[3 + 0 ];v83[v236 + 3 ]=v238;break;end end end else local v240=0 -0 ;local v241;while true do if ((1156 -(1074 + 82))==v240) then v241=v85[3 -1 ];v83[v241]=v83[v241](v83[v241 + (1785 -(214 + 1570)) ]);break;end end end elseif ((4137>1848) and (v86<=64)) then if (v86>((3097 -1579) -(990 + 465))) then if (v83[v85[1 + 1 ]]==v85[9 -5 ]) then v77=v77 + 1 + (0 -0) ;else v77=v85[3 + 0 ];end else v62[v85[12 -9 ]]=v83[v85[7 -5 ]];end elseif ((2436<=3134) and (v86<=(1791 -(1668 + 58)))) then local v244=626 -(512 + 114) ;local v245;local v246;local v247;while true do if (v244==(2 -1)) then v247=v83[v245 + 2 ];if ((3723==3723) and (v247>(0 -0))) then if (v246>v83[v245 + 1 ]) then v77=v85[10 -7 ];else v83[v245 + 3 ]=v246;end elseif (v246<v83[v245 + 1 ]) then v77=v85[6 -3 ];else v83[v245 + 2 + 1 ]=v246;end break;end if (v244==(0 + 0)) then v245=v85[2];v246=v83[v245];v244=1 + 0 ;end end elseif ((v86>(222 -156)) or (4046>=4316)) then v83[v85[1996 -(109 + 999 + 886) ]]={};else v83[v85[1471 -(259 + 1010 + (464 -264)) ]]=v83[v85[5 -2 ]][v85[819 -(98 + 166 + 551) ]];end v77=v77 + (827 -(802 + 24)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);